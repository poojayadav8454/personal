{% comment %} {{ 'component-product-listing.css' | asset_url | stylesheet_tag }} {% endcomment %}

<div class="trimmer-category container">
  <ul class="trimmer-cat-ul">
    {% for block in section.blocks %}
      <li
        class="trimmer-cat-li tab-menu-trimmer {% unless forloop.index == 1 %}notIndex-one {% endunless %} {% if forloop.index == 1 %}tab-color{% endif %} {% if block.settings.icon-tab == blank %}image-blank-tab{% endif %}"
        dataId="custom-{{ forloop.index }}"
      >
        {% if block.settings['icon-tab'] != '' %}
          <span>{{ block.settings['icon-tab'] }}</span>
        {% endif %}
        {% if block.settings['icon-tab'] == blank %}
          <span class="blank-image-div"></span>
        {% endif %}
        <p
          class=""
        >
          {{ block.settings.tab_text }}
        </p>
      </li>
    {% endfor %}
  </ul>
</div>

<div class="collection custom-product-grid container">
  {%- for block in section.blocks -%}
    <div
      class="main-product-grid tab-collection-product {% if forloop.index == 1 %}collection-index{% else %}not-collection-index{% endif %}"
      id="custom-{{ forloop.index }}"
    >
      {% if block.settings.image != blank %}
        {{ block.settings.image | image_url: width: '1440' | image_tag: loading: 'lazy', class: 'trimmer-grid' }}
      {% endif %}
      <ul
        class="productListing {% if layout == '1' %} productList{% else %} productGrid column-{{ '4' }}{% endif %} list-{{ '2' }} list-unstyled"
        id="main-collection-product-grid"
        data-id="{{ section.id }}"
      >
        {% assign productgrid = block.settings.collection %}
        {%- for product in productgrid.products -%}
          <li class="product customproduct custompdp-{{ forloop.index }} custom---{{ productgrid.handle }}--{{ forloop.index }}">
            {% render 'custom-product-card',
              product_card_product: product,
              serial: forloop.index,
              sectionId: section.id,
              show_list: true,
              loading: true
            %}
          </li>
        {%- endfor -%}
        {% if productgrid.metafields.custom.product_collection %}
          {% if productgrid.metafields.custom.product_collection.value != blank %}
            <h2 class="grid-head">{{ section.settings.text }}</h1>
            <div class="main-meta-product">
              <div class="center_product">
                {% for product_reference in productgrid.metafields.custom.product_collection.value %}
                  {% render 'collection-product-page', product: product_reference %}
                {% endfor %}
              </div>
            </div>
          {% endif %}
        {% else %}

        {% endif %}
      </ul>
    </div>
  {%- endfor -%}
</div>
<div class="mobile-product-slider">
  <h1>{{ section.settings['text-scroll'] }}</h1>
  <div class="show-in-mobile">
    {% render 'custom-product-page' %}
  </div>
</div>
<style>
  .main-product-grid .main-meta-product .center_product{
        /* padding: 0 0 0 8px; */
    gap:10px;
  }
  .trimmer-grid{
    width: 100%;
    height: auto;
  }
  .tab-menu-trimmer p{
    margin:0;

  }
  .not-collection-index{
        display: none;
  }
  /* tab css */

    .trimmer-category {
      max-width: 100%;
      width: 800px;
      position: relative;
      margin: 0 auto;
      /* padding-top:30px; */
  }
  ul.trimmer-cat-ul {
      max-width: 100%;
      width: 800px;
      margin: 0 auto 20px auto;
      list-style: none;
      display: inline-flex;
      align-items: center;
      gap: 25px;
      /* justify-content: center; */
      /* border: 2px solid #ddd; */
      padding: 6px 0;
  }
  li.trimmer-cat-li {
     padding: 10px 48px;
    border-radius: 10px;
    font-weight: bold;
    font-size: 17px;
    transition: 0.4s;
    /* border: 1px solid #31bad2; */
    background:white;
    text-align:center;
  }

    @media(max-width:450px){
      ul.trimmer-cat-ul{gap:5%}
    }

  /* tab css */
</style>
{% schema %}
  {
    "name": "Trimmer Tab",
    "settings": [
      {
        "type": "text",
        "id": "text",
        "label": "Heading",
        "default":"Specific Product"
      },
      {
        "type": "text",
        "id": "text-scroll",
        "label": "Heading",
        "default":"#Khulkekhel Featured"
      }
    ],
    "blocks": [
  {
    "type": "grid",
    "name": "Trimmer Grid",
    "settings": [
      {
        "type": "text",
        "id": "tab_text",
        "label": "Tab Name"
      },
      {
        "type": "html",
        "id": "icon-tab",
        "label": "Tab Icon"
      },
      {
        "type": "header",
        "content": "Collection Content"
      },
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
      {
        "type": "collection",
        "id": "collection",
        "label": "Choose Collection"
      }
    ]
  }
],
    "presets": [
      {
        "name": "Trimmer Tab"
      }
    ]
  }
{% endschema %}
